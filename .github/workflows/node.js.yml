# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Label of the container job
  container-job:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    
    # Docker Hub image that `container-job` executes in
    container: node:latest    

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      dbgfo:
        # Docker Hub image
        image: mariadb:latest
        # Provide the password for mariadb
        env:
          MARIADB_ROOT_PASSWORD: 2021aminum%
          MARIADB_DATABASE: chess
          MARIADB_USER: appchess
          MARIADB_PASSWORD: Chess,aminum2021
        # Set health checks to wait until mariadb has started

        options: >-
           --expose 3306
           --health-cmd "mysql -uroot -p'2021aminum%' --execute 'SHOW DATABASES;'"
           --health-interval 10s
           --health-timeout 5s
           --health-retries 5


    steps:
#      - run: docker exec -it dbgfo mysql -uappchess -p'Chess,aminum2021' --execute 'USE information_schema;SHOW TABLES;'
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build --if-present

      - name: Connect to mariadb et create tables
        run : cat ../schemadb.sql

      - name: Test application
        run: npm test
        env:
          # The hostname used to co mmunicate with the PostgreSQL service container
          # POSTGRES_HOST: dbgfo
          # The default PostgreSQL port
          # POSTGRES_PORT: 3306
          LOGLEVEL: debug
          DB_HOST: dbgfo
          DB_PORT: 3306
          DB_USER: appchess
          DB_PASSWORD: Chess,aminum2021
          DB_DATABASE: chess      

